// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  syllabusContent String? // add it later after user uploads syllabus using gemini's OCR
  standard String
  interests String

  dataSources DataSource[]
  aiChats     AIChat[]
  reminders   Reminder[]
  contents    AIContent[]
}

model DataSource {
  id        String           @id @default(uuid())
  type      DataSourceType
  fileType String
  thumbnail String?
  content   String?          // text/chunks/embeddings for RAG
  subject   String?
  topic String?
  description String?
  tags String?
  source    String           // URL or filename
  status    DataSourceStatus 
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime         @default(now())
}

enum DataSourceStatus {
  ERROR 
  PROCESSING
  COMPLETED
}

enum DataSourceType {
  WEBSITE
  TEXT
  DOCS
}

model AIChat {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  messages  Json
  createdAt DateTime @default(now())
}

model AIContent {
  id          String   @id @default(uuid())
  title       String
  description String
  content     String  
  tags        String[]
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
}

model Reminder {
  id          String   @id @default(uuid())
  title       String
  description String?
  time        DateTime
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
}
